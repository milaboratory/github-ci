name: Upload artifact's contents to S3 bucket
author: 'MiLaboratories'
description: |
  Upload artifact's contents to S3 Bucket as latest for a triggered branch.
  e.g. app-main-amd64.tgz

inputs:
  branch-name:
    description: |
      Name of a branch to work with. This branch name will be added
      as suffix if add-branch-name is set to true.
    required: false
    default: ''

  artifact-name:
    description: |
      Name of artifact to work with. This artifact will be downloaded
      from GitHub, all its contents will be uploaded to S3.
    required: false
    default: ''

  artifact-override-os-arch:
    description: |
      For cross-compiled binaries, override the target
      architecture for the resulting archive name.

      For example, if we want to build an arm64 go binary
      by cross-compiling it on the amd64 machine, we need to override
      the resulted name of the archive, e.g., app-am64.zip to app-arm64.zip
      Because by default, we are using an architecture discovered from the os.
    required: false
    default: ''

  add-branch-name:
    description: |
      Add branch name to all uploaded files.
      If file in artifact has extension (e.g. 'app.zip')
      and current branch is, say, 'main',
      the file in S3 would have name 'app-main.zip'.

      Files without extension ('myfile') will have branch name
      appended ('myfile-main').
    required: false
    default: 'false'

  add-os-arch:
    description: |
      Add agent's operating system architecture to uploaded files
      If a file in the artifact has an extension e.g 'app.zip' and the current ARCH is,
      for instance, 'amd64', the resulting file name would be: 'app-amd64.zip.'

      Files without extension ('myfile') will have
      os architecture appended ('myfile-amd64').

      If 'add-version' 'add-sha' and 'add-arch' are true, ARCH is added
      to the file name after the version and sha: 'app-1.2.3-deadbeef-amd64'

    required: false
    default: 'false'

  add-sha:
    description: |
      Add abbreviated commit SHA to uploaded files.
      If file in artifact has extension (e.g. 'app.zip')
      and current SHA is, say, 'deadfacea6c72ef99d5b11c67973a4b7d5109de9',
      the file in S3 would have name 'app-deadface.zip'.

      Files without extension ('myfile') will have version number
      appended ('myfile-deadface').

      If both 'add-version' and 'add-sha' are 'true', SHA is added to
      file name AFTER version number: app-1.2.3-deadbeef

    required: false
    default: 'false'

  s3-iam-role-to-assume:
    description: |
      The ARN of a IAM role to assume and configure the Actions environment with
      assumed role credentials.
    required: false
    default: ''

  s3-region:
    description: |
      AWS region with target S3 bucket
    required: false
    default: 'eu-central-1'
  s3-bucket:
    description: |
      Application archive target S3 bucket
    required: true
  s3-path:
    description: |
      Put artifact's files into given 'directory' in
      S3 bucket.

      Files will be uploaded to:
        's3://<s3-bucket>/<s3-path>/<file-name>'

    required: true

  alternative-urls:
    description: |
      Any S3 file with public access could be downloaded from special URL with
      bucket name and region:
        https://<bucket-name>.s3.<region>.amazonaws.com/<s3-path>

      These URLs are placed to action's outputs by default.

      <alternative-urls> allows to customize URLs for some of the paths by
      applying alternation rules:
        <path> -> <custom URL>

      Example:
        Rule
          ^/cdn/software/ -> https://cdn.milaboratory.com/software/
        will make action to generate URL to cdn.milaboratory.com for any
        file inside /cdn/software/ directory in S3 storage.

    required: false
    default: ''

outputs:
  uploaded:
    description: |
      Newline-separated list of S3 keys for uploaded files
      (without bucket and region name)
    value: ${{ steps.uploaded-list.outputs.stdout }}
  uploaded-json:
    description: |
      'uploaded' in JSON format
    value: ${{ steps.uploaded-json.outputs.result }}

  download:
    description: |
      Newline-separated list of download links for files in S3
    value: ${{ steps.download-list.outputs.result }}
  download-json:
    description: |
      'download' in JSON format
    value: ${{ steps.download-json.outputs.result }}

runs:
  using: "composite"

  steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.s3-iam-role-to-assume }}
        aws-region: ${{ inputs.s3-region }}

    - id: artifact-path
      uses: milaboratory/github-ci/actions/shell@v4
      with:
        run: echo './release-artifact'

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.artifact-name }}
        path: ${{ steps.artifact-path.outputs.stdout }}

    - name: Add branch name
      if: inputs.add-branch-name == 'true' && inputs.branch-name != ''
      uses: milaboratory/github-ci/actions/files/add-suffix@v4
      with:
        paths: ${{ steps.artifact-path.outputs.stdout }}
        suffix: '-${{ inputs.branch-name }}'

    - name: Get SHA suffix
      id: sha
      if: inputs.add-sha != 'false' && inputs.add-sha != ''
      uses: milaboratory/github-ci/actions/shell@v4
      env:
        ADD_SHA: ${{ inputs.add-sha }}
      with:
        run: |
          current_sha="${GITHUB_SHA}"

          if [ "${ADD_SHA}" != 'true' ] && [ "${ADD_SHA}" -gt 0 ] ; then
            # Abbreviate SHA size to given number of symbols
            current_sha="${current_sha:0:${ADD_SHA}}"
          fi

          echo "${current_sha}"

    - name: Add SHA
      if: steps.sha.outputs.stdout != ''
      uses: milaboratory/github-ci/actions/files/add-suffix@v4
      with:
        paths: ${{ steps.artifact-path.outputs.stdout }}
        suffix: '-${{ steps.sha.outputs.stdout }}'

    - name: Get ARCH
      id: os_arch
      if: inputs.add-os-arch == 'true'
      uses: milaboratory/github-ci/actions/shell@v4
      env:
        OVERRIDE_ARCH: ${{ inputs.artifact-override-os-arch }}
      with:
        run: |
          if [ ! -z "${OVERRIDE_ARCH}" ];then
            _target_arch="${OVERRIDE_ARCH}"
          else
            _target_arch="$(uname -m)"
          fi

          case "${_target_arch}" in
          "arm64"|"aarch64") echo "arm64" ;;
          "amd64"|"x86_64"|"x86") echo "amd64" ;;
          *)
          echo "unknown arch: $_target_arch"
          exit 1
          ;;
          esac

    - name: Add ARCH
      if: steps.os_arch.outputs.stdout != ''
      uses: milaboratory/github-ci/actions/files/add-suffix@v4
      with:
        paths: ${{ steps.artifact-path.outputs.stdout }}
        suffix: '-${{ steps.os_arch.outputs.stdout }}'

    - name: Upload files
      uses: milaboratory/github-ci/actions/shell@v4
      with:
        run: |
          aws s3 cp --recursive \
          ${{ steps.artifact-path.outputs.stdout }}/ \
          s3://${{ inputs.s3-bucket }}/${{ inputs.s3-path }}

    - id: uploaded-list
      uses: milaboratory/github-ci/actions/shell@v4
      env:
        ARTIFACT_PATH: ${{ steps.artifact-path.outputs.stdout }}
        S3_PATH: ${{ inputs.s3-path }}
      with:
        run: |
          S3_PATH="${S3_PATH%/}" # trim trailing '/'
          S3_PATH="${S3_PATH#/}" # trim leading '/'

          cd "${ARTIFACT_PATH}"
          find . -mindepth 1 -type f,l,p |
            while read -r file_path; do
              echo "/${S3_PATH}/${file_path#./}"
            done

    - id: uploaded-json
      uses: milaboratory/github-ci/actions/strings/json-list@v4
      with:
        input: ${{ steps.uploaded-list.outputs.stdout }}

    - id: download-list
      uses: milaboratory/github-ci/actions/strings/replace@v4
      with:
        input: ${{ steps.uploaded-list.outputs.stdout }}

        # Any public S3 object is accessible through special URL:
        #   https://<bucket-name>.s3.<region>.amazonaws.com/<s3-path>
        #
        # The last replace rule generates this default URL for
        # all S3 paths not handled by 'alternative-urls'.
        rules: |
          ${{ inputs.alternative-urls }}

          ^/ -> https://${{ inputs.s3-bucket }}.s3.${{ inputs.s3-region }}.amazonaws.com/

    - id: download-json
      uses: milaboratory/github-ci/actions/strings/json-list@v4
      with:
        input: ${{ steps.download-list.outputs.result }}