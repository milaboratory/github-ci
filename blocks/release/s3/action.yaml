name: Upload artifact's contents to S3 bucket
author: 'MiLaboratories'
description: |
  Upload artifact's contents to S3 Bucket.

  Requirements:
    - initialized context (actions/context/init)

inputs:
  artifact-name:
    description: |
      Name of artifact to work with. This artifact will be downloaded
      from GitHub, all its contents will be uploaded to S3.
    required: false
    default: ''
  add-version:
    description: |
      Add verison number to all uploaded files.
      If file in artifact has extension (e.g. 'app.zip')
      and current version (from actions/context) is, say, '1.3.0',
      the file in S3 would have name 'app-1.3.0.zip'.

      Files without extension ('myfile') will have version number
      appended ('myfile-1.3.0').
    required: false
    default: 'false'
  add-sha:
    description: |
      Add abbreviated commit SHA to uploaded files.
      If file in artifact has extension (e.g. 'app.zip')
      and current SHA is, say, 'deadfacea6c72ef99d5b11c67973a4b7d5109de9',
      the file in S3 would have name 'app-deadface.zip'.

      Files without extension ('myfile') will have version number
      appended ('myfile-deadface').

      If both 'add-version' and 'add-sha' are 'true', SHA is added to
      file name AFTER version number: app-1.2.3-deadbeef

    required: false
    default: 'false'

  s3-key-id:
    description: |
      AWS Key ID for S3 auth
    required: false
    default: ''
  s3-key-secret:
    description: |
      AWS Key Secret for S3 auth
    required: false
    default: ''

  s3-region:
    description: |
      AWS region with target S3 bucket
    required: false
    default: 'eu-central-1'
  s3-bucket:
    description: |
      Application archive target S3 bucket
    required: true
  s3-path:
    description: |
      Put artifact's files into given 'directory' in
      S3 bucket.

      Files will be uploaded to:
        's3://<s3-bucket>/<s3-path>/<file-name>'

    required: true

  alternative-urls:
    description: |
      Any S3 file with public access could be downloaded from special URL with
      bucket name and region:
        https://<bucket-name>.s3.<region>.amazonaws.com/<s3-path>

      These URLs are placed to action's outputs by default.

      <alternative-urls> allows to customize URLs for some of the paths by
      applying alternation rules:
        <path> -> <custom URL>

      Example:
        Rule
          ^/cdn/software/ -> https://cdn.milaboratory.com/software/
        will make action to generate URL to cdn.milaboratory.com for any
        file inside /cdn/software/ directory in S3 storage.

    required: false
    default: ''

outputs:
  uploaded:
    description: |
      Newline-separated list of S3 keys for uploaded files
      (without bucket and region name)
    value: ${{ steps.uploaded-list.outputs.stdout }}
  uploaded-json:
    description: |
      'uploaded' in JSON format
    value: ${{ steps.uploaded-json.outputs.result }}

  download:
    description: |
      Newline-separated list of download links for files in S3
    value: ${{ steps.download-list.outputs.result }}
  download-json:
    description: |
      'download' in JSON format
    value: ${{ steps.download-json.outputs.result }}

runs:
  using: "composite"

  steps:
    - id: context
      uses: milaboratory/github-ci/actions/context@v3

    - name: Configure AWS CLI
      if: inputs.s3-key-id != ''
      uses: milaboratory/github-ci/actions/aws/configure@v3
      with:
        key-id: ${{ inputs.s3-key-id }}
        key-secret: ${{ inputs.s3-key-secret }}
        region: ${{ inputs.s3-region }}
        append: false

    - id: artifact-path
      uses: milaboratory/github-ci/actions/shell@v3
      with:
        run: echo './release-artifact'

    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: ${{ inputs.artifact-name }}
        path: ${{ steps.artifact-path.outputs.stdout }}

    - name: Add version
      if: inputs.add-version == 'true'
      uses: milaboratory/github-ci/actions/files/add-suffix@v3
      with:
        paths: ${{ steps.artifact-path.outputs.stdout }}
        suffix: '-${{ steps.context.outputs.current-version }}'

    - name: Get SHA suffix
      id: sha
      if: inputs.add-sha != 'false' && inputs.add-sha != ''
      uses: milaboratory/github-ci/actions/shell@v3
      env:
        ADD_SHA: ${{ inputs.add-sha }}
      with:
        run: |
          current_sha="${GITHUB_SHA}"

          if [ "${ADD_SHA}" != 'true' ] && [ "${ADD_SHA}" -gt 0 ] ; then
            # Abbreviate SHA size to given number of symbols
            current_sha="${current_sha:0:${ADD_SHA}}"
          fi

          echo "${current_sha}"

    - name: Add SHA
      if: steps.sha.outputs.stdout != ''
      uses: milaboratory/github-ci/actions/files/add-suffix@v3
      with:
        paths: ${{ steps.artifact-path.outputs.stdout }}
        suffix: '-${{ steps.sha.outputs.stdout }}'

    - name: Upload files
      uses: milaboratory/github-ci/actions/aws@v3
      with:
        args: |
          s3
          cp
          --recursive
          ${{ steps.artifact-path.outputs.stdout }}/
          s3://${{ inputs.s3-bucket }}/${{ inputs.s3-path }}

    - id: uploaded-list
      uses: milaboratory/github-ci/actions/shell@v3
      env:
        ARTIFACT_PATH: ${{ steps.artifact-path.outputs.stdout }}
        S3_PATH: ${{ inputs.s3-path }}
      with:
        run: |
          S3_PATH="${S3_PATH%/}" # trim trailing '/'
          S3_PATH="${S3_PATH#/}" # trim leading '/'

          cd "${ARTIFACT_PATH}"
          find . -mindepth 1 -type f,l,p |
            while read -r file_path; do
              echo "/${S3_PATH}/${file_path#./}"
            done

    - id: uploaded-json
      uses: milaboratory/github-ci/actions/strings/json-list@v3
      with:
        input: ${{ steps.uploaded-list.outputs.stdout }}

    - id: download-list
      uses: milaboratory/github-ci/actions/strings/replace@v3
      with:
        input: ${{ steps.uploaded-list.outputs.stdout }}

        # Any public S3 object is accessible through special URL:
        #   https://<bucket-name>.s3.<region>.amazonaws.com/<s3-path>
        #
        # The last replace rule generates this default URL for
        # all S3 paths not handled by 'alternative-urls'.
        rules: |
          ${{ inputs.alternative-urls }}

          ^/ -> https://${{ inputs.s3-bucket }}.s3.${{ inputs.s3-region }}.amazonaws.com/

    - id: download-json
      uses: milaboratory/github-ci/actions/strings/json-list@v3
      with:
        input: ${{ steps.download-list.outputs.result }}
