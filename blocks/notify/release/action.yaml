name: Send notifications about release creation
author: 'MiLaboratories'
description: |
  Send notifications about release creation

  Requirements:
    - initialized context (actions/context/init)

inputs:
  telegram-target:
    description: |
      Target telegram User or Channel ID
    required: true
  telegram-token:
    description: |
      Telegram Bot token
    required: true

  job-status:
    description: |
      Release job status.

      To get it, put it into job's outputs (status: {{ job.status }}),
      then get it from needs.<job-id>.outputs.status.

      You can pass several statuses here, one per line. The will be merged into single status by
      severity level (cancelled -> success -> failure).

    required: true

  product-name:
    description: |
      Name of product that was built
    required: false
    default: ${{ github.repository }}

  docker-images:
    description: |
      List of docker images in JSON format to put into notification
      Empty string is silently converted to '[]' for convenience.
    required: false
    default: ''

  maven-packages:
    description: |
      List of java libraries in JSON format to put into notification.
      Empty string is silently converted to '[]' for convenience.
    required: false
    default: ''

  download-links:
    description: |
      List of distribution download links libraries in JSON format to put into notification.
      Empty string is silently converted to '[]' for convenience.
    required: false
    default: ''

  search-tags:
    description: |
      List of search tags for the telegram notification channel
    required: false
    default: ''

  additional-info:
    description: |
      Additional text to append to message
    required: false
    default: ''

runs:
  using: "composite"

  steps:
    - id: context
      uses: milaboratory/github-ci/actions/context@v4

    - id: job-status
      name: Merge job statuses
      uses: milaboratory/github-ci/actions/helpers/merge-status@v4
      with:
        statuses: ${{ inputs.job-status }}

    - id: json
      uses: milaboratory/github-ci/actions/shell@v4
      env:
        MAVEN_PACKAGES: ${{ inputs.maven-packages }}
        DOCKER_IMAGES: ${{ inputs.docker-images }}
        DOWNLOAD_LINKS: ${{ inputs.download-links }}
        SEARCH_TAGS: ${{ inputs.search-tags }}
      with:
        dump-stdout: false
        run: |
          ghwa_set_output "docker-images" "${DOCKER_IMAGES:-[]}"
          ghwa_set_output "maven-packages" "${MAVEN_PACKAGES:-[]}"
          ghwa_set_output "download-links" "${DOWNLOAD_LINKS:-[]}"
          ghwa_set_output "search-tags" "${SEARCH_TAGS:-[]}"

    - name: Report 'release failed' to Telegram
      if: steps.job-status.outputs.status != 'success'
      uses: milaboratory/github-ci/actions/notify/telegram/release-failed@v4
      with:
        telegram-target: ${{ inputs.telegram-target }}
        telegram-token: ${{ inputs.telegram-token }}

        product-name: ${{ inputs.product-name }}
        version: ${{ steps.context.outputs.current-version }}
        tag: ${{ steps.context.outputs.current-version-tag }}
        search-tags: ${{ fromJSON(steps.json.outputs.data).search-tags }}

        additional-info: ${{ inputs.additional-info }}

    - name: Report 'new release' to Telegram
      if: steps.job-status.outputs.status == 'success'
      uses: milaboratory/github-ci/actions/notify/telegram/release-ready@v4
      with:
        telegram-target: ${{ inputs.telegram-target }}
        telegram-token: ${{ inputs.telegram-token }}

        product-name: ${{ inputs.product-name }}
        version: ${{ steps.context.outputs.current-version }}
        tag: ${{ steps.context.outputs.current-version-tag }}

        docker-images: ${{ fromJSON(steps.json.outputs.data).docker-images }}
        maven-packages: ${{ fromJSON(steps.json.outputs.data).maven-packages }}
        download-links: ${{ fromJSON(steps.json.outputs.data).download-links }}
        search-tags: ${{ fromJSON(steps.json.outputs.data).search-tags }}
        additional-info: ${{ inputs.additional-info }}
