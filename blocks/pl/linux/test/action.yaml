name: Run a test for the Platform on Linux
author: 'MiLaboratories'
description: |
  Run a test for the Platform on Linux.

  Prepare agent for running a test for the Platform on Linux.
  Install Golang specific version, cache dependencies, re-use build results

inputs:
  test-command:
    description: |
      Test command (initiate test for the platform)
    required: true
    default: 'go test ./...'
  bootstrap-ci-script-name:
    description: |
      Bootstrap CI script name (install go modules, C++ libraries, binary tools, etc)
    required: true
    default: 'bootstrap-ci.sh'
  golang-version:
    description: |
      Golang version to use.
      Examples: '1.19', '1.20'
    required: true
  cache-version:
    description: |
      Simple hack, that allows to 'reset' cache for particular job.

      Just change the value of this parameter and the next run will
      not find build cache and will have to start from scratch.

    required: false
    default: 'v1'
  test-integration-cache-paths:
    description: |
      List of paths to files or folders to restore/cache before/after each integration tests run.
    required: false
    default: ''
  test-integration-cache-key:
    description: |
      Key for additional integration tests cache.
      Must be used in conjunction with <test-integration-cache-paths>
    required: false
    default: ''
  github-token:
    description: |
      Github token to authorize git operation in the same repository as the workflow.
    required: true

runs:
  using: "composite"

  steps:
    - name: Prepare environment for building a golang application
      uses: milaboratory/github-ci/actions/golang/prepare@v4-beta
      with:
        golang-version: ${{ inputs.golang-version }}
        cache-version: ${{ inputs.cache-version }}

    - uses: milaboratory/github-ci/actions/git/auth@v4-beta
      with:
        github-token: ${{ inputs.github-token }}

    - name: Restore custom cache
      if: inputs.test-integration-cache-paths != '' && inputs.test-integration-cache-key != ''
      uses: actions/cache@v3
      with:
        key: ${{ inputs.test-integration-cache-key }}
        path: ${{ inputs.test-integration-cache-paths }}

    - name: Run boostrap ci script
      uses: milaboratory/github-ci/actions/shell@v4-beta
      env:
        CI_SCRIPT: ${{ inputs.bootstrap-ci-script-name }}
      with:
        run: |
          if [ -x "${CI_SCRIPT}" ];then
            "./${CI_SCRIPT}"
          else
            printf "File: %s doesn't exist or it's not executable." "${CI_SCRIPT}"
            exit 1
          fi

    - name: Run test command for the platform
      uses: milaboratory/github-ci/actions/shell@v4-beta
      env:
        TEST_CMD: ${{ inputs.test-command }}
        TMPDIR: "/dev/shm"
      with:
        dump-stdout: false
        run: |
          bash -c "${TEST_CMD}"
