name: Build the Platform on MacOS
author: 'MiLaboratories'
description: |
  Build the Platform

  Prepare agent for building the Platform on MacOS.
  Install Golang specific version, cache dependencies, re-use build results

inputs:
  #
  # Build control
  #
  build-command:
    description: |
      Build command (initiate build for the platform)
    required: false
    default: 'go build .'
  build-path:
    description: |
      The path where the build command will run
    required: false
    default: 'platform/cmd/pl'
  bootstrap-ci-script-name:
    description: |
      Bootstrap CI script name (install go modules, C++ libraries, binary tools, etc)
    required: true
    default: 'bootstrap-ci.sh'
  golang-version:
    description: |
      Golang version to use.
      Examples: '1.19', '1.20'
    required: true
  cache-version:
    description: |
      Simple hack, that allows to 'reset' cache for particular job.

      Just change the value of this parameter and the next run will
      not find build cache and will have to start from scratch.

    required: false
    default: 'v1'
  #
  # Github authentication control
  #
  github-token:
    description: |
      Github token to authorize git operation in the same repository as the workflow.
    required: true
  #
  # Artifact control
  #
  artifact-name:
    description: |
      Name of build artifact to create when <artifact-paths> input is not empty

    required: false
    default: 'build-artifacts'
  artifact-paths:
    description: |
      List of paths to artifacts to save after build run.
      Paths are relative to github workspace (repository root).
      Patterns ('*', '**', etc.) are supported.
    required: false
    default: ''
  artifact-retention:
    description: |
      Time in days to keep build artifacts before removing them
    required: false
    default: '7'

runs:
  using: "composite"

  steps:
    - name: Prepare environment for building a golang application
      uses:  milaboratory/github-ci/actions/golang/prepare@v4
      with:
        golang-version: ${{ inputs.golang-version }}
        cache-version: ${{ inputs.cache-version }}

    - uses: milaboratory/github-ci/actions/git/auth@v4
      with:
        github-token: ${{ inputs.github-token }}

    - name: Run boostrap ci script
      uses: milaboratory/github-ci/actions/shell@v4
      env:
        CI_SCRIPT: ${{ inputs.bootstrap-ci-script-name }}
      with:
        run: |
          if [ -x "${CI_SCRIPT}" ];then
            "./${CI_SCRIPT}"
          else
            printf "File: %s doesn't exist or it's not executable." "${CI_SCRIPT}"
            exit 1
          fi

    - name: Run build command for the platform
      uses: milaboratory/github-ci/actions/shell@v4
      env:
        BUILD_CMD: ${{ inputs.build-command }}
        BUILD_PATH: ${{ inputs.build-path }}
      with:
        dump-stdout: false
        run: |
          cd "${BUILD_PATH}"
          bash -c "${BUILD_CMD}"

    - name: Run bundle dylibs
      uses: milaboratory/github-ci/actions/shell@v4
      env:
        BUILD_PATH: ${{ inputs.build-path }}
      with:
        dump-stdout: false
        run : |
          cd ${BUILD_PATH}
          dylibbundler \
            --bundle-deps \
            --create-dir \
            --dest-dir ./libs \
            --install-path '@executable_path/libs/' \
            --fix-file pl

    - name: Add build results to the archive
      uses: milaboratory/github-ci/actions/shell@v4
      env:
        BUILD_PATH: ${{ inputs.build-path }}
      with:
        dump-stdout: false
        run: |
          cd "${BUILD_PATH}"
          7z a pl.zip . '-xr!*.go' '-xr!*.zip' '-xr!*.sum' '-xr!*.mod'

    - name: Save build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.artifact-name }}
        path: |
          ${{ inputs.artifact-paths }}
          !**/*.go
        retention-days: ${{ inputs.artifact-retention }}