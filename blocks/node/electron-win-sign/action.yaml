name: Sign Electron application on Windows
author: 'MiLaboratories'
description: |
  Prepare agent for building a Electron project.
  Install Node specific version, download package, create cache e.t.c

inputs:

  #
  # jsign control
  #
  java-version:
    description: |
      Version of JAVA to to launch ebourg/jsign.
    required: false
    default: '11'

  java-distribution:
    description: |
      Java distribution to use.
      Example: 'temurin', 'zulu', ...
      See 'https://github.com/actions/setup-java#supported-distributions'
      for complete list of supported distributions.
    required: false
    default: 'temurin'

  jsign-version:
    description: |
      Version of jsign
    required: false
    default: '5.0'

  timestamping-mode:
    description: |
      Timestamping mode
    required: false
    default: 'RFC3161'

  timestamping-url:
    description: |
      Timestamping url, must be from the organization that issued code sign certificate
    required: false
    default: ' http://timestamp.globalsign.com/tsa/r6advanced1'

  win-electron-app-path:
    description: |
      File to sign with jsign
    required: false

  win-code-sign-chain:
    description: |
      base64-encoded code sign chain pem file for the Windows
    required: false

  #
  # GCP Control
  #
  gcloud-workload-identity-provider:
    description: |
      Tha name of the GCP workload identity federation provider
    required: false
    default: 'projects/327672633300/locations/global/workloadIdentityPools/milab-prod-github-oidc-pool/providers/milab-prod-github-oidc-provider'

  gcloud-service-account:
    description: |
      The name of the GCP service account
    required: false
    default: 'milab-prod-kms-codesign-sa@mioutpost.iam.gserviceaccount.com'

  gcloud-kms-keyring:
    description: |
       KMS keyring name in GCP
    required: false
    default: 'projects/mioutpost/locations/europe-west3/keyRings/milab-euwe3-prod-kms-ev-codesign-keyring'

  gcloud-kms-keyname:
    description: |
      KMS key name in GCP
    required: false
    default: 'milab-euwe3-prod-kms-ev-codesign'

runs:
  using: "composite"

  steps:
    - name: Install Java
      uses: actions/setup-java@v3
      with:
        distribution: ${{ inputs.java-distribution }}
        java-version: ${{ inputs.java-version }}

    -  name: Configure GCP credentials
       id: gcp_auth
       uses: google-github-actions/auth@v1
       with:
         workload_identity_provider: ${{ gcloud-workload-identity-provider }}
         service_account: ${{ gcloud-service-account }}

    - name: Install ebourg/jsign
      env:
        JSIGN_VERSION: ${{ inputs.jsign-version }}
      shell: pwsh
      run: |
        choco install jsign --version "${{ JSIGN_VERSION }}"

    - name: Prepare for siging
      id: pre-sign
      env:
        CODE_SIGN_CHAIN: ${{ inputs.win-code-sign-chain }}
        ELECTRON_APP_PATH: ${{ inputs.electron-app-path }}
      shell: pwsh
      run: |
        $CODE_SIGN_CHAIN_PEM="codesign-chain.pem"
        $DECODED_CODE_SIGN_CHAIN = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String("${{ env.CODE_SIGN_CHAIN }}"))
        $DECODED_CODE_SIGN_CHAIN | Out-File -FilePath "$CODE_SIGN_CHAIN_PEM"

        $FILE_PARENT_PATH = Split-Path -Path "${{ env.ELECTRON_APP_PATH }}"
        $FILE_RESOLVED_NAME = Split-Path -Path "${{ env.ELECTRON_APP_PATH }}" -Leaf -Resolve

        echo "code-sign-chain-pem=$CODE_SIGN_CHAIN_PEM" >> $env:GITHUB_OUTPUT
        echo "file-parent-path=$FILE_PARENT_PATH" >> $env:GITHUB_OUTPUT
        echo "file-resolved-path=$FILE_RESOLVED_NAME" >> $env:GITHUB_OUTPUT

    - name: Sign electron app with jsign
      env:
        CODE_SIGN_CHAIN: ${{ inputs.win-code-sign-chain }}
        ELECTRON_APP_PATH: ${{ inputs.electron-app-path }}
      shell: pwsh
      run: |
        jsign && \
          --storetype GOOGLECLOUD && \
          --storepass "${{ steps.gcp_auth.outputs.access_token }}" && \
          --keystore "${{ inputs.gcloud-kms-keyring }}" && \
          --alias "${{ inputs.gcloud-kms-keyname }}" && \
          --certfile "${{ steps.pre-sign.outputs.code-sign-chain-pem }}" && \
          --tsmode "${{ inputs.timestamping-mode }}" && \
          --tsaurl "${{ inputs.timestamping-url }}" && \
          "${{ steps.pre-sign.outputs.file-parent-path }}/${{ steps.pre-sign.outputs.file-resolved-path }}"

