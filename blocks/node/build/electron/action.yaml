name: Build Electron application
author: 'MiLaboratories'
description: |
  Prepare agent for building a Electron project.
  Install Node specific version, download package, create cache e.t.c

inputs:
  build-version:
    description: |
       Set version number in 'package.json' file to given value.
    required: false
  build-script-name:
    description: |
      Name of script for application build
    required: true
    default: 'build'
  build-working-directory:
    description: Directory where NPM/Yarn commands should be run
    required: false
    default: '.'
  skip-build:
    description: Whether the action should execute the NPM build script before running 'electron-builder'
    required: false
    default: 'false'
  electron-builder-args:
    description: |
      Other arguments to pass to the `electron-builder` command, e.g. configuration overrides
    required: false
    default: ''
  is-release:
    description: |
      Set If you would like to mark the current version as a release version.
    required: false
    default: 'false'
  github-token:
    description: |
      Copy "github_token" input variable to "GH_TOKEN" env variable (required by 'electron-builder')
    required: true
  gradle-properties:
    description: |
      Contents for '~/.gradle/gradle.properties' to be set before gradle command run.

      Empty value makes actions to keep '~/.gradle/gradle.properties' file intact.
    required: false
    default: ''

  mac-sign-cert:
    description: |
      base64-encoded p12 certificate file for the macOS
    required: false
  mac-sign-cert-pwd:
    description: |
      password to decrypt the p12 signing certificate for the macOS
    required: false
  mac-notr-api-key:
    description: |
      base64-encoded content of an API key file
    required: false
  mac-notr-api-key-id:
    description: |
      Key ID found on App Store Connect for the API key file
    required: false
  mac-notr-api-key-issuer-id:
    description: |
      Issuer ID found on App Store Connect for the API key file
    required: false

  win-sign-cert:
    description: |
      base64-encoded p12 certificate file for the Windows
    required: false
  win-sign-cert-pwd:
    description: |
      password to decrypt the p12 signing certificate for the Windows
    required: false

  node-version:
    description: |
      Node version to use.
      Examples: '16.x', '14.x'
    required: true
  cache-version:
    description: |
      Simple hack, that allows to 'reset' cache for particular job.

      Just change the value of this parameter and the next run will
      not find build cache and will have to start from scratch.

    required: false
    default: 'v1'

  is-electron-application:
    description: |
      If 'true' enables cache for an Electron application,
      if 'false', enables cache for a generic NodeJS application.
    required: false
    default: 'true'

  registry-url:
    description: |
      The npm registry url to set up for auth
      and publication of the node js package.
    required: false
    default: 'https://npm.pkg.github.com'

  scope:
    description: |
      Scope for authenticating against npm registries.
    required: false
    default: ${{ format('{0}{1}', '@', github.repository_owner) }}

  npm-auth-token:
    description: |
      npm private registry auth token
    required: false

  always-auth:
    description: |
      Set always-auth in npmrc.
    required: false
    default: 'false'

runs:
  using: "composite"

  steps:
    - name: Prepare env for Node application build
      uses: milaboratory/github-ci/actions/node/prepare@v4-beta
      with:
        node-version: ${{ inputs.node-version }}
        cache-version: ${{ inputs.cache-version }}
        is-electron-application: ${{ inputs.is-electron-application }}
        registry-url: ${{ inputs.registry-url }}
        scope: ${{ inputs.scope }}
        always-auth: ${{ inputs.always-auth }}

    - name: Install node packages with npm
      uses: milaboratory/github-ci/actions/shell@v4-beta
      env:
        NODE_AUTH_TOKEN: ${{ inputs.npm-auth-token }}
      with:
        run: |
         npm ci

    - name: Patch package version
      uses: milaboratory/github-ci/actions/node/patch-version@v4-beta
      with:
        version: ${{ inputs.build-version }}

    - name: Set gradle.properties
      if: inputs.gradle-properties != ''
      uses: milaboratory/github-ci/actions/java/gradle/properties/set@v4-beta
      with:
        properties: ${{ inputs.gradle-properties }}

    - uses: milaboratory/github-ci/actions/shell@v4-beta
      if: startsWith(runner.os, 'macOS')
      env:
        APPLE_API_KEY: ${{ inputs.mac-notr-api-key }}
        APPLE_API_KEY_ID: ${{ inputs.mac-notr-api-key-id }}
      with:
        dump-stdout: false
        run: |
          mkdir -p ~/private_keys/
          echo "${APPLE_API_KEY}" | base64 -d > ~/private_keys/AuthKey_${APPLE_API_KEY_ID}.p8

    - name: Build Electron application
      uses: milaboratory/github-ci/actions/electron-builder@test-electron-builder
      env:
        VITE_APP_VERSION: ${{ inputs.build-version }}
        APPLE_API_KEY_ID: ${{ inputs.mac-notr-api-key-id }}
        APPLE_API_ISSUER: ${{ inputs.mac-notr_api_key-issuer-id }}
      with:
        build-script-name: ${{ inputs.build-script-name }}
        skip-build: ${{ inputs.skip-build }}
        electron-builder-args: ${{ inputs.electron-builder-args }}
        working-directory: ${{ inputs.build-working-directory }}
        release: ${{ inputs.is-release }}
        github-token: ${{ inputs.github-token }}
        macos-certs: ${{ inputs.mac-sign-cert }}
        macos-certs-password: ${{ inputs.mac-sign-cert-pwd }}
        windows-certs: ${{ inputs.win-sign-cert }}
        windows-certs-password: ${{ inputs.win-sign-cert-pwd }}