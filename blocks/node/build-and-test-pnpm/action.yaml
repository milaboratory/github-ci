name: Build and Test NodeJS PNPM application
author: 'MiLaboratories'
description: |
  Prepare agent for building the NodeJS application.
  Install NodeJS specific version, download package, create cache e.t.c

inputs:
  build-script-name:
    description: |
      Specify the name of the build script to be executed via npm.
    required: false
    default: 'build'

  turbo-build-concurrency:
    description: |
      Override turbo build concurrency limit the for task execution.
      Must be an integer greater than or equal to 1 or a percentage value like 50%
    required: false

  tests:
    description: |
      Whether or not to run tests after the build.
    required: false
    default: 'false'

  test-script-name:
    description: |
      Specify the name of the test to be executed via npm.
    required: false
    default: 'test'

  turbo-test-concurrency:
    description: |
      Override turbo test concurrency limit the for task execution.
      Must be an integer greater than or equal to 1 or a percentage value like 50%
    required: false

  node-version:
    description: |
      Node version to use.
      Examples: '16.x', '14.x'.
    required: true

  cache-version:
    description: |
      Simple hack, that allows to 'reset' cache for particular job.

      Just change the value of this parameter and the next run will
      not find build cache and will have to start from scratch.

    required: false
    default: 'v1'

  pnpm-version:
    description: |
      Version of pnpm to install
    required: false
    default: 'latest'

  hashfiles-search-path:
    description: |
      Hashfiles search path for pnpm-lock.yaml.
    required: false
    default: '**/pnpm-lock.yaml'

  npmrc-config:
    description: |
      Generates a .npmrc file based on provided configuration.
    required: false

runs:
  using: "composite"

  steps:
    - name: Prepare environment for building a NodeJS application
      uses: milaboratory/github-ci/actions/node/prepare-pnpm@v4-beta
      with:
        node-version: ${{ inputs.node-version }}
        cache-version: ${{ inputs.cache-version }}
        pnpm-version: ${{ inputs.pnpm-version }}
        hashfiles-search-path: ${{ inputs.hashfiles-search-path }}
        npmrc-config: ${{ inputs.npmrc-config }}

    - uses: milaboratory/github-ci/actions/shell@v4-beta
      if: inputs.turbo-build-concurrency != ''
      with:
        run: |
          ghwa_set_env TURBO_BUILD_CONCURRENCY "--concurrency=${{ inputs.turbo-build-concurrency }}"

    - uses: milaboratory/github-ci/actions/shell@v4-beta
      if: inputs.turbo-test-concurrency != ''
      with:
        run: |
          ghwa_set_env TURBO_TEST_CONCURRENCY "--concurrency=${{ inputs.turbo-test-concurrency }}"

    - name: Install NodeJS packages with pnpm
      uses: milaboratory/github-ci/actions/shell@v4-beta
      with:
        run: |
          pnpm install --frozen-lockfile --prefer-offline

    - name: Run build on (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        pnpm run -r ${{ inputs.build-script-name }} -- $env:TURBO_BUILD_CONCURRENCY

    - name: Run build on (macOS and Linux)
      uses: milaboratory/github-ci/actions/shell@v4-beta
      if: runner.os == 'macOS' || runner.os == 'Linux'
      with:
        run: |
          pnpm run -r ${{ inputs.build-script-name }} -- ${{ env.TURBO_BUILD_CONCURRENCY }}

    - name: Run test on (Windows)
      if: runner.os == 'Windows'
        && inputs.tests == 'true'
      shell: pwsh
      run: |
        pnpm run -r ${{ inputs.test-script-name }} -- $env:TURBO_TEST_CONCURRENCY

    - name: Run test on (macOS and Linux)
      uses: milaboratory/github-ci/actions/shell@v4-beta
      if: runner.os == 'macOS' || runner.os == 'Linux'
        && inputs.tests == 'true'
      with:
        run: |
          pnpm run -r ${{ inputs.test-script-name }} -- ${{ env.TURBO_TEST_CONCURRENCY }}