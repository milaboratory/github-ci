name: "platform"

services:
  minio:
    image: quay.io/minio/minio
    command: server /data --address "0.0.0.0:9000" --console-address "0.0.0.0:9001"
    ports:
      - "9001:9001"
      - "9000:9000"
    environment:
      MINIO_ROOT_USER: testuser
      MINIO_ROOT_PASSWORD: testpassword
  platforma:
    image: ${PL_DOCKER_REGISTRY}:${PL_DOCKER_TAG}
    ports:
      - ${PL_API_PORT:-6345}:${PL_API_PORT:-6345}
    tmpfs: [ /tmp ]
    logging:
      driver: json-file
      options:
        max-size: "100m"
        max-file: "4"
    environment:
      # dump platforma's configuration to stdout
      - "PL_DUMP_CONFIG_BEFORE_RUN=true"
      # license settings
      - "MI_LICENSE=${MI_LICENSE:-}"
      - "PL_LICENSE=${PL_LICENSE:-}"
      - "PL_LICENSE_FILE=${PL_LICENSE_FILE:+/storage/license/${PL_LICENSE_FILE}}"
      # network settings
      - "PL_API_ADDR=0.0.0.0:${PL_API_PORT:-6345}"
      - "PL_GRPC_TLS_ENABLED=${PL_GRPC_TLS_ENABLED:-false}"
      - "PL_GRPC_TLS_AUTH_MODE=${PL_GRPC_TLS_AUTH_MODE:-}"
      # logging settings
      - "PL_LOG_LEVEL=${PL_LOG_LEVEL:-info}"
      - "PL_LOG_DESTINATION=${PL_LOG_DESTINATION:-stdout}"
      - "PL_LOG_COMMIT_SUMMARY=${PL_LOG_COMMIT_SUMMARY:-false}"
      - "PL_LOG_RESOURCE_DATA=${PL_LOG_RESOURCE_DATA:-false}"
      # auth settings
      - "PL_AUTH_ENABLED=${PL_AUTH_ENABLED:-false}"
      # data controller: general settings
      - "PL_DATA_CREATE_BUCKET=${PL_DATA_CREATE_BUCKET:-true}"
      - "PL_DATA_HARDLINK_MODE=${PL_DATA_HARDLINK_MODE:-auto}"
      # data controller: primary storage
      - "PL_DATA_PRIMARY_TYPE=${PL_DATA_PRIMARY_TYPE:-S3}"
      - "PL_DATA_PRIMARY_S3_ENDPOINT=${PL_DATA_PRIMARY_S3_ENDPOINT:-http://minio:9000/}"
      - "PL_DATA_PRIMARY_S3_PRESIGN_ENDPOINT=${PL_DATA_PRIMARY_S3_PRESIGN_ENDPOINT:-${PL_DATA_PRIMARY_S3_ENDPOINT:-http://localhost:9000/}}"
      - "PL_DATA_PRIMARY_S3_KEY_PREFIX=${PL_DATA_PRIMARY_S3_KEY_PREFIX:-}"
      - "PL_DATA_PRIMARY_S3_REGION=${PL_DATA_PRIMARY_S3_REGION:-eu-central-1}"
      - "PL_DATA_PRIMARY_S3_BUCKET=${PL_DATA_PRIMARY_S3_BUCKET:-platforma-primary-bucket}"
      - "PL_DATA_PRIMARY_S3_KEY=${PL_DATA_PRIMARY_S3_KEY:-static:testuser}"
      - "PL_DATA_PRIMARY_S3_SECRET=${PL_DATA_PRIMARY_S3_SECRET:-static:testpassword}"
      # data controller: library storage
      - "PL_DATA_LIBRARY_TYPE=${PL_DATA_LIBRARY_TYPE:-FS}"
    volumes:
      - platforma-file-primary:/storage/controllers/data/primary
      - platforma-file-library:/storage/controllers/data/library
      - platforma-file-work:/storage/controllers/data/work
      - platforma-packages:/storage/controllers/packageLoader
      - platforma-db:/storage/rocksdb
      - platforma-log:/storage/log
      - platforma-license:/storage/license
    restart: always

volumes:
  host-tmp:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${TMPDIR:-/tmp}
  platforma-packages:
  platforma-file-work:
  platforma-file-primary:
  platforma-file-library:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PL_TEST_ASSETS_DIR}
  platforma-db:
  platforma-log:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PL_LOG_DIR}
  platforma-license:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PL_LICENSE_DIR:-}