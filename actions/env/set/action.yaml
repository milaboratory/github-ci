name: Set environment variables for the next steps
author: 'MiLaboratories'
description: |
  Batch setter for environment variables.
  This is just a way to simplify the process when you need to set
  several variables, e.g. passed through inputs or secrets.

inputs:
  json:
    description: |
      JSON map of env variables to set
    required: false
    default: ''

  list:
    description: |
      list of <KEY>=<VALUE> lines with env variables to set
    required: false
    default: ''

  mask-values:
    description: |
      Make action to mask environment variables values
    required: false
    default: 'false'

runs:
  using: "composite"

  steps:
    - name: Set from <json>
      if: inputs.json != ''
      uses: milaboratory/github-ci/actions/shell@v4
      env:
        ENV_TO_SET: ${{ inputs.json }}
        MASK: ${{ inputs.mask-values }}
      with:
        run: |
          jq -r 'keys[]' <<<"${ENV_TO_SET}" | tr -d '\r' |
            while read -r name; do
              value="$(
                jq -r \
                  --arg "key" "${name}" \
                  '.[$key]' \
                  <<<"${ENV_TO_SET}"
              )"

              ghwa_set_env "${name}" "${value}"

              if [ "${MASK}" = 'true' ]; then
                ghwa_add_mask "${value}"
              fi
            done

    - name: Set from <list>
      if: inputs.list != ''
      uses: milaboratory/github-ci/actions/shell@v4
      env:
        ENV_TO_SET: ${{ inputs.list }}
        MASK: ${{ inputs.mask-values }}
      with:
        run: |
          echo "${ENV_TO_SET}" |
            while read -r env_line; do
              if [ -z "${env_line}" ]; then
                continue
              fi

              name="${env_line%%=*}"
              value="${env_line#*=}"

              ghwa_set_env "${name}" "${value}"

              if [ "${MASK}" = 'true' ]; then
                ghwa_add_mask "${value}"
              fi
            done
