name: Telegram Message
description: |
  Notify User or Channel about new build

inputs:
  telegram-target:
    description: |
      Target telegram User or Channel ID
    required: true
  telegram-token:
    description: |
      Telegram Bot token
    required: true

  product-name:
    description: |
      Name of product that was built
    required: false
    default: ${{ github.repository }}
  build-version:
    description: |
      Build version to display in message
    required: true
  build-category:
    description: |
      Build category: 'dev', 'release', 'whatever' :)
    required: false
    default: 'dev'

  docker-images:
    description: |
      List of docker images related to build in JSON format
    required: false
    default: '[]'

  maven-packages:
    description: |
      List of maven packages related to build in JSON format
    required: false
    default: '[]'

  download-links:
    description: |
      URLs to add to notification message. E.g. binary download URL.
    required: false
    default: '[]'

  additional-info:
    description: |
      Additional text to append to message
    required: false
    default: ''

runs:
  using: "composite"

  steps:
    - id: safe-ctx
      uses: milaboratory/github-ci/actions/helpers/safe-ctx@v4

    - uses: milaboratory/github-ci/actions/templates/jinja@v4
      id: message
      with:
        data: |
          { "product": { "name": ${{ toJSON(inputs.product-name) }},
                         "additional_info": ${{ toJSON(inputs.additional-info) }} },

            "build": { "category": ${{ toJSON(inputs.build-category) }},
                       "version": ${{ toJSON(inputs.build-version) }} },

            "github": ${{ steps.safe-ctx.outputs.github }},

            "category_icons": { "dev": "📦",
                                "release": "🍾" },

            "docker_images": ${{ inputs.docker-images }},
            "maven_packages": ${{ inputs.maven-packages }},
            "download_links": ${{ inputs.download-links }} }

        template: |
          {{- category_icons[ build["category"] ] | default ('💚') -}}
          {{- " " -}} 
          \[{{ product["name"] }}] New {{ build["category"] }} build: {{ build["version"] }} on {{ github["ref_name"] }} ([{{ github["sha"][:8] }}]({{ github["server_url"] }}/{{ github["repository"] }}/commit/{{ github["sha"] }}))
          
          {%- if docker_images | length > 0 %}
          Docker images:
          {%- for i in docker_images %}
            - ```{{ i }}```
          {%- endfor %}
          {%- endif %}

          {%- if maven_packages | length > 0 %}
          Maven packages:
          {%- for i in maven_packages %}
            - ```{{ i }}```
          {%- endfor %}
          {%- endif %}

          {%- if download_links | length > 0 %}
          Download links:
          {%- for i in download_links %}
            - {{ i }}
          {%- endfor %}
          {%- endif %}
          \[ [Source code](
            {{- github["server_url"] }}/{{ github["repository"] }}/tree/{{ github["sha"] -}}
          ) | [CI logs](
            {{- github["server_url"] }}/{{ github["repository"] }}/actions/runs/{{ github["run_id"] -}}
          ) ]

          {{ product["additional_info"] }}

    - uses: milaboratory/github-ci/actions/notify/telegram/send@v4
      with:
        to: ${{ inputs.telegram-target }}
        token: ${{ inputs.telegram-token }}
        format: markdown
        disable_web_page_preview: true
        message: ${{ steps.message.outputs.data }}
