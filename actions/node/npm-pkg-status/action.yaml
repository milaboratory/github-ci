name: Check NPM package status in a registry
author: "MiLaboratories"
description: |
  Check the status of a NPM package within a registry

inputs:
  npm-pkg-name:
    description: |
      NPM package name to check in a `registry-url`.
    required: false

  npm-pkg-version:
    description: |
      Version for a `npm-pkg-name` to check in a `registry-url`.
    required: false

  package-json-path:
    description: |
      Path to package.json to use to obtain npm-pkg-name and npm-pkg-version values.
    required: false

  registry-url:
    description: |
      The npm registry url to set up for auth
      and publication of the node js package.
    required: false
    default: "https://npm.pkg.github.com"

  npm-auth-token:
    description: |
      NPM private registry auth token
    required: false

outputs:
  exist:
    description: |
      Status of an npm package in a registry
      '1' exist
      '0' doesn't exist
    value: ${{ steps.set-status.outputs.stdout }}

  pkg-name:
    description: |
      Name of npm package (<npm-pkg-name> input or name extracted from <package-json-path> file)
    value: ${{ fromJSON(steps.package.outputs.data).name }}

  pkg-version:
    description: |
      Version of npm package (<npm-pkg-version> input or version extracted from <package-json-path> file)
    value: ${{ fromJSON(steps.package.outputs.data).version }}

runs:
  using: "composite"

  steps:
    - name: Read package name and version
      if: inputs.package-json-path != '0'
      uses: milaboratory/github-ci/actions/shell@v4-beta
      id: package
      env:
        NPM_PKG_NAME: ${{ inputs.npm-pkg-name }}
        NPM_PKG_VERSION: ${{ inputs.npm-pkg-version }}
        PACKAGE_JSON_PATH: ${{ inputs.package-json-path }}
      with:
        run: |
          if [ -z "${NPM_PKG_NAME}" ]; then
            if [ -z "${PACKAGE_JSON_PATH}" ]; then
              ghwa_error "Cannot check package presence in remote registry: neither 'npm-pkg-name', nor 'package-json-path' inputs are set"
              exit 1
            fi
            NPM_PKG_NAME="$(jq --raw-output '.name' "${PACKAGE_JSON_PATH}")"
          fi

          if [ -z "${NPM_PKG_VERSION}" ]; then
            if [ -z "${PACKAGE_JSON_PATH}" ]; then
              ghwa_error "Cannot check package presence in remote registry: neither 'npm-pkg-version', nor 'package-json-path' inputs are set"
              exit 1
            fi
            NPM_PKG_VERSION="$(jq --raw-output '.version' "${PACKAGE_JSON_PATH}")"
          fi

          ghwa_set_output name "${NPM_PKG_NAME}"
          ghwa_set_output version "${NPM_PKG_VERSION}"

    - name: Check NPM package status in a registry
      uses: milaboratory/github-ci/actions/shell@v4-beta
      id: npm-pkg-status
      env:
        NPM_PKG_NAME: ${{ fromJSON(steps.package.outputs.data).name }}
        NPM_PKG_VERSION: ${{ fromJSON(steps.package.outputs.data).version }}
        NPM_REGISTRY: ${{ inputs.registry-url }}
        NODE_AUTH_TOKEN: ${{ inputs.npm-auth-token }}
      with:
        run: |
          NPM_PKG_NAME_URLENCODED="$(mish_urlencode "${NPM_PKG_NAME}")"

          RES_JSON=$(curl -s \
            -H "Accept: application/json" \
            -H "Authorization: Bearer ${NODE_AUTH_TOKEN}" \
            "${NPM_REGISTRY}/${NPM_PKG_NAME_URLENCODED}")

          if ! mish_is_json <<<"${RES_JSON}"; then
            echo "NPM registry '${NPM_REGISTRY}' responded with non-json output for package ${NPM_PKG_NAME}"
            echo "  original request: '${NPM_REGISTRY}/${NPM_PKG_NAME_URLENCODED}'"
            echo "  response: ${RES_JSON}"

            exit 1
          fi

          has_error=$( jq 'has("error")' <<<"${RES_JSON}" )

          if [ "${has_error}" = "true" ]; then

            echo "GitHub NPM registry '${NPM_REGISTRY}' response for '${NPM_PKG_NAME}' contains error"
            jq <<<"${RES_JSON}"

            if ! jq --raw-output '.error' <<<"${RES_JSON}" |
              grep -q -E 'npm package .* does not exist|Not found'; then

              # When package is built for the first time, we get 'npm package <package name> does not exist'
              # error from GitHub. This error should be ignored. Any other error should lead to action fail.
              exit 1

            fi
          fi

          # The GitHub NPM registry response format for package is:
          #  { ..., "versions": { "<version name>": { <package info> } } }
          # or
          #  { "error": ... }
          # In any case, to check the given version of package existence we just need to be sure
          # the response has '.versions[<version name>]' key.

          version_exists=$(
            jq \
              --arg version "${NPM_PKG_VERSION}" \
              '.versions | has($version)' \
              <<<"${RES_JSON}" \
          )

          if [ "${version_exists}" = "true" ] ; then

            echo "Package: ${NPM_PKG_NAME}@${NPM_PKG_VERSION} found in registry."
            ghwa_set_output exist "1"

            exit 0

          fi

          echo "Package: ${NPM_PKG_NAME}@${NPM_PKG_VERSION} not found in registry."
          ghwa_set_output exist "0"

    - id: set-status
      uses: milaboratory/github-ci/actions/shell@v4-beta
      with:
        run: |
          echo "${{ fromJSON(steps.npm-pkg-status.outputs.data).exist }}"
