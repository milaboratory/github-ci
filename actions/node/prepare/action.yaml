name: Prepare environment for NodeJS/Electron application
author: 'MiLaboratories'
description: |
  Prepare environment: install specific version of Node, restore cache for modules.

inputs:
  node-version:
    description: |
      Node version to use.
      Examples: '16.x', '14.x'
    required: true

  cache-version:
    description: |
      Simple hack, that allows to 'reset' cache for particular job.

      Just change the value of this parameter and the next run will
      not find build cache and will have to start from scratch.

    required: false
    default: 'v1'

  hashfiles-search-path:
    description: |
      Hashfiles search path for package-lock.json
    required: false
    default: '**/package-lock.json'

  is-electron-application:
    description: |
      If 'true' enables cache for an Electron application,
      if 'false', enables cache for a generic NodeJS application.
    required: false
    default: 'true'

  update-npm:
    description: |
      Update npm util to the latest available version
    required: false
    default: 'false'

  install-deps:
    description: |
      run 'npm ci' as part of preparation process
    required: false
    default: 'false'

  registry-url:
    description: |
      The npm registry url to set up for auth
      and publication of the node js package.
    required: false
    default: 'https://npm.pkg.github.com'

  scope:
    description: |
      Scope for authenticating against npm registries.
    required: false
    default: ${{ format('{0}{1}', '@', github.repository_owner) }}

  always-auth:
    description: |
      Set always-auth in npmrc.
    required: false
    default: 'false'

  npmrc-config:
    description: |
      Generates a .npmrc file based on provided configuration.
    required: false

runs:
  using: "composite"

  steps:
    - name: Install NodeJS - ${{ inputs.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}
        registry-url: ${{ inputs.registry-url }}
        scope: ${{ inputs.scope }}
        always-auth: ${{ inputs.always-auth }}

    - name: Re-Write .npmrc config
      uses: milaboratory/github-ci/actions/utils/create-npmrc@v4-beta
      if: inputs.npmrc-config != ''
      with:
        npmrcConfig: ${{ inputs.npmrc-config }}

    - name: Set up cache for a NodeJS/Electron application
      uses: milaboratory/github-ci/actions/node/cache@v4-beta
      with:
        is-electron-application: ${{ inputs.is-electron-application }}
        hashfiles-search-path: ${{ inputs.hashfiles-search-path }}
        cache-version: ${{ inputs.cache-version }}
        local-cache: 'on'

    - name: Update npm to latest available version
      if: inputs.update-npm == 'true'
      uses: milaboratory/github-ci/actions/shell@v4-beta
      with:
        run: |
          npm i -g npm@latest

    - name: Install dependencies
      if: inputs.install-deps == 'true'
      uses: milaboratory/github-ci/actions/shell@v4-beta
      with:
        run: |
          npm ci
