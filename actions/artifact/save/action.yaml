name: Pack tar archive and save it as artifact
author: "MiLaboratories"
description: |
  Get all files mathing globbing rules, pack them into single tar archive and 
  save this archive as artifact. The standard upload-artifact does not preserve
  permissions. This action helps to bypass this limitation.

inputs:
  name:
    description: |
      Name of the artifact to upload.
      Optional. Default is 'artifact'
    required: false
    default: "artifact"

  path:
    description: |
      A file, directory or wildcard pattern that describes what to upload
      Required.
    required: true

  if-no-files-found:
    description: |
      The desired behavior if no files are found using the provided path.
      Available Options:
        warn: Output a warning but do not fail the action
        error: Fail the action with an error message
        ignore: Do not output any warnings or errors, the action does not fail
      Optional. Default is 'error'
    required: false
    default: "error"

  retention-days:
    description: |
      Duration after which artifact will expire in days. 0 means using default retention.
      Minimum 1 day.
      Maximum 90 days unless changed from the repository settings page.
      Optional. Defaults to repository settings.
    required: false
    default: "0"

  compression-level:
    description: |
      The level of compression for Zlib to be applied to the artifact archive.
      The value can range from 0 to 9.
      For large files that are not easily compressed, a value of 0 is recommended for significantly faster uploads.
      The compression is applied to the zip archive, where tar is stored. The tar file itself will not be compressed.
      Optional. Default is '6'
    required: false
    default: "6"

  overwrite:
    description: |
      If true, an artifact with a matching name will be deleted before a new one is uploaded.
      If false, the action will fail if an artifact for the given name already exists.
      Does not fail if the artifact does not exist.
      Optional. Default is 'false'
    required: false
    default: "false"

  include-hidden-files:
    description: |
      Whether to include hidden files in the provided path in the artifact
      The file contents of any hidden files in the path should be validated before
      enabled this to avoid uploading sensitive information.
      Optional. Default is 'false'
    required: false
    default: "false"

  # interactive-debug:
  #   description: |
  #     Break execution and start interactive debugging session with server VSCode right on agent
  #   required: false
  #   default: "false"

runs:
  using: "composite"

  steps:
    - name: Generate archive name
      id: archive-name
      shell: bash
      env:
        ARTIFACT_NAME: ${{ inputs.name }}
      run: |
        if [ -z "ARTIFACT_NAME" ]; then
          echo "::error::Empty 'name' input. Specify artifact name." >&2
          exit 1
        fi

        # We need unique archive name here to not overwrite any existing file in workdir.
        # We also need static name to simplify 'restore' action logic.
        # This name is an attempt to meet both criteria.
        archive_name="artifact-5b3513f5"
        echo "name=${archive_name}" >> "${GITHUB_OUTPUT}"

    - uses: milaboratory/github-ci/actions/files/list@v4-db-1
      id: artifact-files
      with:
        patterns: ${{ inputs.path }}
        exclude-hidden-files: ${{ ! fromJSON(inputs.include-hidden-files) }}
        implicit-descendants: false
        relative: true

    - name: Create tar
      shell: bash
      env:
        ARCHIVE_NAME: ${{ steps.archive-name.outputs.name }}
        ARTIFACT_PATHS: ${{ steps.artifact-files.outputs.paths }}
        ARCHIVE_IS_EMPTY: ${{ steps.artifact-files.outputs.is-empty }}
        RUNNER_OS: ${{ runner.os }}
      run: |
        if [ "${ARCHIVE_IS_EMPTY}" == "true" ]; then
          # do not create archive to let actions/upload-artifact decide how to react on 'nothing found' case
          exit 0
        fi

        if [ "${RUNNER_OS}" == "Windows" ]; then
          ARTIFACT_PATHS="${ARTIFACT_PATHS//\\//}" # convert windows delimiters to not confuse tar
        fi

        echo "${ARTIFACT_PATHS}" > "${ARCHIVE_NAME}.files"
        echo "Paths to be archived:"
        cat "${ARCHIVE_NAME}.files"

        tar -T "${ARCHIVE_NAME}.files" -c -f "${ARCHIVE_NAME}.tar"

    # - uses: fawazahmed0/action-debug-vscode@main
    #   if: inputs.interactive-debug == 'true'

    - uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.name }}
        if-no-files-found: ${{ inputs.if-no-files-found }}
        retention-days: ${{ inputs.retention-days }}
        compression-level: ${{ inputs.compression-level }}
        overwrite: ${{ inputs.overwrite }}
        include-hidden-files: ${{ inputs.include-hidden-files }}

        path: |
          ${{ steps.archive-name.outputs.name }}.tar
