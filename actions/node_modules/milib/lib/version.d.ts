export interface versionInfo {
    major: number;
    minor: number;
    patch: number;
    suffix: string;
    original: string;
    semver: boolean;
}
export declare function parse(v: string): versionInfo;
/**
 * Compares <a> and <b> versions
 *   - returns -1 if <a> < <b>
 *   - returns  1 if <a> > <b>
 *   - returns  0 if <a> == <b>
 */
export declare function compare(a: versionInfo, b: versionInfo, trySanitize?: boolean): number;
export declare function toString(v: versionInfo): string;
/**
 * Sanitize version, trying to make versiuon to be valid semver.
 *   - replace 'non-semver' symbols with '-' (hyphen)
 *   - parse sanitized string as version number once again
 *
 * @param v: string | versionInfo
 * @returns versionInfo - version info after sanitizing. It might still not be a valid semver!
 */
export declare function sanitize(v: string | versionInfo): versionInfo;
/**
 * Sanitize version and throw an error, if the result is not in semver format.
 *
 * @param v: string | versionInfo
 * @returns versionInfo - version in semver format
 */
export declare function toSemver(v: string | versionInfo): versionInfo;
