name: Build RocksDB for MacOS/Linux.
on:
  workflow_call:
    inputs:
      vcpkg-triplet:
        description: |
          The vcpkg triplet name
        type: string
        required: false
      #
      # AWS
      #
      aws-iam-role-to-assume:
        description: |
          The ARN of a IAM role to assume and configure the Actions environment with
          assumed role credentials.
        type: string
        required: false
        default: 'arn:aws:iam::511903394050:role/milab-euce1-prod-github-oidc-role-pkgs-build'
      aws-region:
        description: |
          The AWS region
        type: string
        required: false
        default: 'eu-central-1'
      aws-s3-bucket-name:
        description: |
          AWS S3 bucket name
        type: string
        required: false
        default: 'milab-euce1-prod-pkgs-s3-static-files'
jobs:
  build:
    name: :build-rocksdb
    permissions:
      id-token: write
      contents: read
    runs-on: linux-latest
    steps:
      - name: checkout milaboratory/deb repo
        uses: actions/checkout@v3

      - name: run boostrap ci script
        env:
          VCPKG_DISABLE_METRICS: 1
        run:
          .\bootstrap-ci.sh

      - id: rocksdb_os_details
        name: get rocksdb version from vcpkg ports
        uses: milaboratory/github-ci/actions/shell@v4-beta
        with:
          run: |
            get_os_arch=$(uname -m)
            case "${get_os_arch}" in
             x86_64)
               _RUNNER_OS_ARCH="amd64"
               ;;
             aarch64 | arm64)
               _RUNNER_OS_ARCH="arm64"
               ;;
             *)
               echo "Arch is not in the list: ${get_os_arch}"
               exit 1
               ;;
            esac

            _ROCKSDB_VERSION =$(cat ./vcpkg/ports/rocksdb/vcpkg.json | jq -r '.version')
            _RUNNER_OS_SANITEZED=$(echo ${RUNNER_OS} | awk '{print tolower($0)}')

            ghwa_set_output "runner-os" "${_RUNNER_OS_SANITEZED}"
            ghwa_set_output "runner-os-arch" "${_RUNNER_OS_ARCH}"
            ghwa_set_output "rocksdb-version" "${_ROCKSDB_VERSION}"

      - name: run build rocksdb
        env:
          VCPKG_TRIPLET: ${{ inputs.vcpkg-triplet }}
          VCPKG_DISABLE_METRICS: 1
        run: |
          vcpkg install "rocksdb[core,zlib,zstd,bzip2,lz4,snappy]:${VCPKG_TRIPLET}"

      - uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ inputs.aws-iam-role-to-assume }}
          aws-region: ${{ inputs.aws-region }}

      - name: upload vcpkg rocksdb lib and include folders
        env:
          S3_BUCKET_NAME: ${{ inputs.aws-s3-bucket-name }}
          ROCKSDB_VERSION: ${{ fromJSON( steps.rocksdb_os_details.outputs.data ).rocksdb-version }}
          GH_AGENT_OS: ${{ fromJSON( steps.rocksdb_os_details.outputs.data ).runner-os }}
          GH_AGENT_OS_ARCH: ${{ fromJSON( steps.rocksdb_os_details.outputs.data ).runner-os-arch }}
          VCPKG_TRIPLET: ${{ inputs.vcpkg-triplet }}
          GH_WORKSPACE: ${{ github.workspace }}
        run: |
          ROCKSDB_LIB_PATH="vcpkg/installed/${VCPKG_TRIPLET}"
          ROCKSDB_ARCHIVE_NAME="rocksdb-lib_${ROCKSDB_VERSION}_${GH_AGENT_OS}_${GH_AGENT_OS_ARCH}.7z"
          ROCKSDB_ARCHIVE_PATH="${GH_WORKSPACE}/${ROCKSDB_ARCHIVE_NAME}"

          7z a "${ROCKSDB_ARCHIVE_PATH}" "${ROCKSDB_LIB_PATH}/lib" "${ROCKSDB_LIB_PATH}/include"
          aws s3 cp "${ROCKSDB_ARCHIVE_PATH}" s3://${S3_BUCKET_NAME}/rocksdb/${ROCKSDB_VERSION}/

