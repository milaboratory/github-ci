name: Build RocksDB for Windows with MinGW64.
on:
  workflow_call:
    inputs:
      vcpkg-triplet:
        description: |
          The vcpkg triplet name
        type: string
        required: false
        default: 'x64-mingw-static'
      #
      # AWS
      #
      aws-iam-role-to-assume:
        description: |
          The ARN of a IAM role to assume and configure the Actions environment with
          assumed role credentials.
        type: string
        required: false
        default: 'arn:aws:iam::511903394050:role/milab-euce1-prod-github-oidc-role-pkgs-build'
      aws-region:
        description: |
          The AWS region
        type: string
        required: false
        default: 'eu-central-1'
      aws-s3-bucket-name:
        description: |
          AWS S3 bucket name
        type: string
        required: false
        default: 'milab-euce1-prod-pkgs-s3-static-files'
jobs:
  build:
    name: :build-rocksdb
    permissions:
      id-token: write
      contents: read
    runs-on: windows-latest
    steps:
      - name: checkout milaboratory/deb repo
        uses: actions/checkout@v4

      - name: run boostrap ci script for windows
        env:
          GH_WORKSPACE: ${{ github.workspace }}
          VCPKG_DISABLE_METRICS: 1
        run:
          .\windows\rocksdb\bootstrap-ci-windows.ps1

      - id: rocksdb_vcpkg_ports_version
        name: get rocksdb version from vcpkg ports
        run: |
          $ROCKSDB_VERSION = Get-Content ${{ env.VCPKG_ROOT }}\ports\rocksdb\vcpkg.json | jq -r '.version'
          echo "rocksdb_version=${ROCKSDB_VERSION}" >> ${env:GITHUB_OUTPUT}

      - name: run build rocksdb
        env:
          VCPKG_TRIPLET: ${{ inputs.vcpkg-triplet }}
          VCPKG_DISABLE_METRICS: 1
        run: |
          ${{ env.VCPKG_ROOT }}\vcpkg install "rocksdb[core,zlib,zstd,bzip2,lz4,snappy]:${{ env.VCPKG_TRIPLET }}"

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ inputs.aws-iam-role-to-assume }}
          aws-region: ${{ inputs.aws-region }}

      - name: upload vcpkg rocksdb lib and include folders
        env:
          S3_BUCKET_NAME: ${{ inputs.aws-s3-bucket-name }}
          ROCKSDB_VERSION: ${{ steps.rocksdb_vcpkg_ports_version.outputs.rocksdb_version }}
          VCPKG_TRIPLET: ${{ inputs.vcpkg-triplet }}
          GH_WORKSPACE: ${{ github.workspace }}
        run: |
          $ROCKSDB_LIB_PATH = "${{ env.VCPKG_ROOT }}\installed\${{ env.VCPKG_TRIPLET }}"
          $ROCKSDB_ARCHIVE_NAME = "rocksdb-lib_${{ env.ROCKSDB_VERSION }}_windows_amd64.7z"
          $ROCKSDB_ARCHIVE_PATH = "${{ env.GH_WORKSPACE }}\${ROCKSDB_ARCHIVE_NAME}"

          7z a "${ROCKSDB_ARCHIVE_PATH}" "${ROCKSDB_LIB_PATH}\lib" "${ROCKSDB_LIB_PATH}\include"
          aws s3 cp "${ROCKSDB_ARCHIVE_PATH}" s3://${{ env.S3_BUCKET_NAME }}/rocksdb/${{ env.ROCKSDB_VERSION }}/

